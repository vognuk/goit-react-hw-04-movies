{"version":3,"sources":["utils/fetchAPI.js","utils/fetchImage.js","images/No_image_poster.png","components/NoImage/index.jsx","components/NoImage/NoImage.module.css","components/Movies/index.jsx","components/Movies/Movies.module.css","utils/pageTitles.js","components/SearchBar/SearchBar.module.css","utils/queryParameters.js","components/SearchBar/index.jsx","views/MoviesPage.js"],"names":["API_KEY","fetchReviewsById","movieId","a","fetch","fetchAPI","fetchPopular","fetchByQuery","query","fetchById","fetchCastById","fetchTrending","BASE_IMG_URL","NoImage","className","s","image","src","NoImagePoster","alt","module","exports","withRouter","movies","location","pageTitle","wrapper","heading","list","map","id","title","poster_path","item","to","pathname","state","from","pageTitles","POPULAR","RESULT","TRENDING","queryParameters","queryString","parse","Searchbar","value","handleInputChange","e","setState","currentTarget","toLowerCase","handleSubmit","preventDefault","onSubmit","props","trim","this","form","input","type","autoComplete","autoFocus","placeholder","onChange","button","label","Component","MoviesPage","isLoading","isSearching","error","fetchMovies","response","ok","json","data","results","length","history","push","routes","moviesPage","Promise","reject","Error","message","fetchPopularMovies","handleFormSubmit","searchQuery","search","getQueryParams","prevProps","prevState","prevQuery","nextQuery","Preloader","Movies"],"mappings":"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","file":"static/js/5.9440423d.chunk.js","sourcesContent":["const API_KEY = '5990567cf4039e52fa9271e8be71e971';\r\n\r\nconst fetchCastById = movieId => {\r\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,);\r\n};\r\n\r\nconst fetchTrending = () => {\r\n  return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`,);\r\n};\r\n\r\nconst fetchReviewsById = async movieId => {\r\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,);\r\n};\r\n\r\nconst fetchPopular = () => {\r\n  return fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`,);\r\n};\r\n\r\nconst fetchByQuery = query => {\r\n  return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=true&query=${query}`,);\r\n};\r\n\r\nconst fetchById = async movieId => {\r\n  return fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`,);\r\n};\r\n\r\nconst fetchAPI = {\r\n  fetchPopular,\r\n  fetchByQuery,\r\n  fetchById,\r\n  fetchCastById,\r\n  fetchTrending,\r\n  fetchReviewsById,\r\n};\r\n\r\nexport default fetchAPI;\r\n","const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport default BASE_IMG_URL;\n","export default __webpack_public_path__ + \"static/media/No_image_poster.68ae3506.png\";","import NoImagePoster from '../../images/No_image_poster.png';\nimport s from './NoImage.module.css'\nconst NoImage = () => {\n  return <img className={s.image} src={NoImagePoster} alt=\"No image\" />;\n};\n\nexport default NoImage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"NoImage_image__vdnKC\"};","import { Link, withRouter } from 'react-router-dom';\nimport s from './Movies.module.css';\nimport PropTypes from 'prop-types';\n\nimport BlankImageLoader from '../NoImage';\nimport BASE_IMG_URL from '../../utils/fetchImage';\n\nconst Movies = ({ movies, location, pageTitle }) => {\n  return (\n    <>\n      <div className={s.wrapper}>\n        {pageTitle && <h1 className={s.heading}> {pageTitle}</h1>}\n        <ul className={s.list}>\n          {movies.map(({ id, title, poster_path }) => (\n            <li key={id} className={s.item}>\n              <Link\n                to={{\n                  pathname: `/movies/${id}`,\n                  state: { from: location },\n                }}\n              >\n                {poster_path ? (\n                  <img src={`${BASE_IMG_URL}${poster_path}`} alt=\"poster\" />\n                ) : (\n                    <BlankImageLoader />\n                  )}\n\n                <span className={s.title}>{title}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nMovies.propTypes = PropTypes.shape({\n  movies: PropTypes.array,\n  location: PropTypes.object,\n  pageTitle: PropTypes.string,\n}).isRequired;\n\nexport default withRouter(Movies);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Movies_wrapper__iMT5C\",\"heading\":\"Movies_heading__366Be\",\"list\":\"Movies_list__3Sd2J\",\"item\":\"Movies_item__I3Orv\",\"title\":\"Movies_title__e94JA\"};","export const pageTitles = {\n  POPULAR: 'Popular',\n  RESULT: 'Search results',\n  TRENDING: 'In trending',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchBar_wrapper__2JNS8\",\"form\":\"SearchBar_form__3sB8r\",\"button\":\"SearchBar_button__MYZ9H\",\"label\":\"SearchBar_label__35g-I\",\"input\":\"SearchBar_input__1CcOr\"};","import queryString from 'query-string'\n\nconst queryParameters = query => {\n  return queryString.parse(query);\n}\n\nexport default queryParameters;\n","import { Component } from 'react';\n// import { ImSearch } from 'react-icons/im';\n// import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './SearchBar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  handleInputChange = e => {\n    this.setState({ value: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { value } = this.state;\n    const { onSubmit } = this.props;\n    if (value.trim() === '') {\n      // toast.error('Please enter your query.');\n      return;\n    }\n    onSubmit(value.trim());\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div className={s.wrapper}>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Enter movie\"\n            value={value}\n            onChange={this.handleInputChange}\n          />\n\n          <button\n            type=\"submit\"\n            className={s.button}>\n            <span className={s.label}>\n              {/* <ImSearch /> */}\n              Go\n            </span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n// import { toast } from 'react-toastify';\nimport Preloader from '../components/Preloader';\nimport getQueryParams from '../utils/queryParameters';\nimport SearchForm from '../components/SearchBar';\nimport MoviesList from '../components/Movies';\nimport { pageTitles } from '../utils/pageTitles';\nimport routes from '../routes';\nimport fetchAPI from '../utils/fetchAPI';\n\nclass MoviesPage extends Component {\n  state = {\n    movies: [],\n    isLoading: true,\n    isSearching: false,\n    error: null,\n  };\n\n  async componentDidMount() {\n    const { query } = getQueryParams(this.props.location.search);\n    if (query) {\n      this.setState({ isSearching: true });\n      await this.fetchMovies(query);\n      return;\n    }\n    await this.fetchPopularMovies();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = getQueryParams(prevProps.location.search);\n    const { query: nextQuery } = getQueryParams(this.props.location.search);\n\n    if (prevQuery !== nextQuery && nextQuery) {\n      await this.fetchMovies(nextQuery);\n      this.setState({ isSearching: true });\n      return;\n    }\n  }\n\n  fetchMovies = async query => {\n    this.setState({ isLoading: true });\n    try {\n      const response = await fetchAPI.fetchByQuery(query);\n      if (response.ok) {\n        const data = await response.json();\n        if (data.results.length === 0) {\n          // toast(\"Sorry, but we can't find anything for your query.\");\n          this.props.history.push(routes.moviesPage);\n          this.setState({ isLoading: false });\n          return;\n        }\n        return this.setState({ movies: data.results, isLoading: false });\n      }\n\n      return Promise.reject(\n        new Error(`Sorry. Something went wrong. Can't find anything.`),\n      );\n    } catch (error) {\n      this.setState({ error: error.message, isLoading: false });\n    }\n  };\n\n  fetchPopularMovies = async () => {\n    this.setState({ isLoading: false });\n    try {\n      const response = await fetchAPI.fetchPopular();\n      if (response.ok) {\n        const data = await response.json();\n        return this.setState({ movies: data.results });\n      }\n\n      return Promise.reject(\n        new Error(`Sorry. Something went wrong. Can't find anything.`),\n      );\n    } catch (error) {\n      this.setState({ error: error.message, isLoading: false });\n    }\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.props.history.push({\n      pathname: this.props.location.pathname,\n      search: `query=${searchQuery}`,\n    });\n  };\n\n  render() {\n    const { isLoading, isSearching, error, movies } = this.state;\n    return (\n      <>\n        <SearchForm onSubmit={this.handleFormSubmit} />\n        {isLoading ? (\n          <Preloader />\n        ) : isSearching ? (\n          <MoviesList movies={movies} pageTitle={pageTitles.RESULT} />\n        ) : (\n              <MoviesList movies={movies} pageTitle={pageTitles.POPULAR} />\n            )}\n        {error && <h1> {error}</h1>}\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n"],"sourceRoot":""}